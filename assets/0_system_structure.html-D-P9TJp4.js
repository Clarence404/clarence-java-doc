import{_ as t,c as n,a as l,o as r}from"./app-B85CE9EU.js";const i={};function e(o,s){return r(),n("div",null,s[0]||(s[0]=[l('<h1 id="系统架构" tabindex="-1"><a class="header-anchor" href="#系统架构"><span>系统架构</span></a></h1><div class="hint-container warning"><p class="hint-container-title">Todo</p><p>以下只是基础大纲，后续需要持续增加内容</p></div><h2 id="一、技术选型与决策" tabindex="-1"><a class="header-anchor" href="#一、技术选型与决策"><span><strong>一、技术选型与决策</strong></span></a></h2><ul><li><strong>架构风格选型</strong>（单体 vs 微服务 vs Serverless）</li><li><strong>编程语言与框架选型</strong>（Java、Golang、Rust 等）</li><li><strong>数据库选型</strong>（MySQL vs PostgreSQL vs NoSQL）</li><li><strong>缓存方案</strong>（Redis vs Memcached）</li><li><strong>消息队列选型</strong>（Kafka vs RabbitMQ vs RocketMQ）</li><li><strong>云服务 vs 自建机房</strong>（AWS vs 阿里云 vs 腾讯云 vs 私有化部署）</li><li><strong>分布式存储与计算选型</strong>（Hadoop vs Spark vs Flink）</li></ul><h2 id="二、系统设计与分解" tabindex="-1"><a class="header-anchor" href="#二、系统设计与分解"><span><strong>二、系统设计与分解</strong></span></a></h2><ul><li><strong>DDD（领域驱动设计）与分层架构</strong></li><li><strong>微服务拆分原则</strong>（按业务、按领域、按数据划分）</li><li><strong>API 设计规范（RESTful vs GraphQL vs gRPC）</strong></li><li><strong>数据库分库分表策略</strong></li><li><strong>CAP 理论 &amp; BASE 理论</strong></li><li><strong>分布式事务（2PC、TCC、SAGA）</strong></li><li><strong>接口幂等性 &amp; 并发控制</strong></li></ul><h2 id="三、性能优化" tabindex="-1"><a class="header-anchor" href="#三、性能优化"><span><strong>三、性能优化</strong></span></a></h2><ul><li><strong>数据库优化（索引优化、SQL 调优、分库分表）</strong></li><li><strong>缓存优化（热点数据、穿透、击穿、雪崩）</strong></li><li><strong>JVM 调优（GC 优化、参数调优、内存分配策略）</strong></li><li><strong>线程池优化（拒绝策略、参数配置）</strong></li><li><strong>API 性能优化（异步、批量、流式处理）</strong></li><li><strong>CDN 加速与前端优化</strong></li></ul><h2 id="四、安全性设计" tabindex="-1"><a class="header-anchor" href="#四、安全性设计"><span><strong>四、安全性设计</strong></span></a></h2><ul><li><strong>常见安全漏洞防御（SQL 注入、XSS、CSRF、RCE）</strong></li><li><strong>身份认证与授权（JWT、OAuth2、SSO、RBAC）</strong></li><li><strong>数据加密与传输安全（HTTPS、TLS、AES、RSA）</strong></li><li><strong>API 访问控制（Rate Limiting、IP 黑白名单）</strong></li><li><strong>安全审计与日志管理</strong></li></ul><h2 id="五、沟通与协作" tabindex="-1"><a class="header-anchor" href="#五、沟通与协作"><span><strong>五、沟通与协作</strong></span></a></h2><ul><li><strong>架构师如何与业务团队对接需求</strong></li><li><strong>架构设计文档（ADR、架构决策记录）</strong></li><li><strong>团队协作工具（Jira、Confluence、GitLab CI/CD）</strong></li><li><strong>技术方案评审 &amp; 代码 Review</strong></li><li><strong>敏捷开发 vs 瀑布流开发的适用场景</strong></li></ul><h2 id="六、持续学习与技术前瞻性" tabindex="-1"><a class="header-anchor" href="#六、持续学习与技术前瞻性"><span><strong>六、持续学习与技术前瞻性</strong></span></a></h2><ul><li><strong>架构师需要关注的技术趋势（AI、云原生、Web3、边缘计算）</strong></li><li><strong>如何跟进开源社区 &amp; 技术动态（GitHub、InfoQ、CNCF）</strong></li><li><strong>技术博客与书籍推荐</strong></li><li><strong>开源贡献与技术演讲</strong></li></ul>',14)]))}const g=t(i,[["render",e],["__file","0_system_structure.html.vue"]]),h=JSON.parse('{"path":"/architecture/0_system_structure.html","title":"系统架构","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、技术选型与决策","slug":"一、技术选型与决策","link":"#一、技术选型与决策","children":[]},{"level":2,"title":"二、系统设计与分解","slug":"二、系统设计与分解","link":"#二、系统设计与分解","children":[]},{"level":2,"title":"三、性能优化","slug":"三、性能优化","link":"#三、性能优化","children":[]},{"level":2,"title":"四、安全性设计","slug":"四、安全性设计","link":"#四、安全性设计","children":[]},{"level":2,"title":"五、沟通与协作","slug":"五、沟通与协作","link":"#五、沟通与协作","children":[]},{"level":2,"title":"六、持续学习与技术前瞻性","slug":"六、持续学习与技术前瞻性","link":"#六、持续学习与技术前瞻性","children":[]}],"git":{"updatedTime":1747057983000,"contributors":[{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":4,"url":"https://github.com/Clarence"},{"name":"hanchen","username":"hanchen","email":"1154937362@qq.com","commits":1,"url":"https://github.com/hanchen"},{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":2,"url":"https://github.com/hello0709"}]},"filePathRelative":"architecture/0_system_structure.md"}');export{g as comp,h as data};
