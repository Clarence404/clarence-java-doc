import{_ as t,c as a,a as c,o as h}from"./app--e9pJ7rm.js";const l="/clarence-java-doc/assets/jetcache_arch-DKkyIy9B.png",r={};function n(s,e){return h(),a("div",null,e[0]||(e[0]=[c('<h1 id="jetcache" tabindex="-1"><a class="header-anchor" href="#jetcache"><span>Jetcache</span></a></h1><p>JetCache 是一个 <strong>Java 缓存框架</strong>，主要作用是 <strong>简化缓存开发，提高缓存系统的性能与可维护性</strong>。它由阿里巴巴开源，适用于 Spring Boot 项目，支持本地缓存（如 Caffeine）和远程缓存（如 Redis）<strong>统一管理</strong>，可通过注解或编程方式灵活使用。</p><hr><h2 id="一、jetcache-解决了哪些问题" tabindex="-1"><a class="header-anchor" href="#一、jetcache-解决了哪些问题"><span>一、JetCache 解决了哪些问题？</span></a></h2><h3 id="_1-缓存开发复杂、重复代码多" tabindex="-1"><a class="header-anchor" href="#_1-缓存开发复杂、重复代码多"><span>1. <strong>缓存开发复杂、重复代码多</strong>：</span></a></h3><ul><li>提供注解方式简化缓存读写操作（如 <code>@Cached</code>）。</li></ul><h3 id="_2-本地缓存和分布式缓存分离" tabindex="-1"><a class="header-anchor" href="#_2-本地缓存和分布式缓存分离"><span>2. <strong>本地缓存和分布式缓存分离</strong>：</span></a></h3><ul><li>JetCache 支持 <strong>多级缓存</strong>（本地 + Redis），自动同步读写。</li></ul><h3 id="_3-缓存一致性与失效控制困难" tabindex="-1"><a class="header-anchor" href="#_3-缓存一致性与失效控制困难"><span>3. <strong>缓存一致性与失效控制困难</strong>：</span></a></h3><ul><li>支持 TTL、自动刷新（<code>@CacheRefresh</code>）、缓存更新与删除注解。</li></ul><h3 id="_4-序列化、key-管理容易出错" tabindex="-1"><a class="header-anchor" href="#_4-序列化、key-管理容易出错"><span>4. <strong>序列化、Key 管理容易出错</strong>：</span></a></h3><ul><li>提供统一的 Key/Value 编码机制，避免手动管理。</li></ul><hr><h2 id="二、jetcache-的主要能力" tabindex="-1"><a class="header-anchor" href="#二、jetcache-的主要能力"><span>二、JetCache 的主要能力</span></a></h2><table><thead><tr><th>功能</th><th>描述</th></tr></thead><tbody><tr><td>注解缓存</td><td>使用注解如 <code>@Cached</code> 自动缓存方法返回值</td></tr><tr><td>多级缓存支持</td><td>本地（如 Caffeine）+ 远程（如 Redis）缓存组合</td></tr><tr><td>自动刷新</td><td>支持定时刷新缓存，避免热点数据失效</td></tr><tr><td>缓存穿透保护</td><td>防止缓存穿透（缓存空值、并发加载）</td></tr><tr><td>统一配置</td><td>支持 application.yml 配置管理多个缓存区域</td></tr><tr><td>编程式 API</td><td>灵活创建和管理 Cache 对象，适用于复杂逻辑</td></tr><tr><td>Spring Boot 支持</td><td>深度整合，开箱即用</td></tr></tbody></table><hr><h2 id="三、简单理解-jetcache-是什么" tabindex="-1"><a class="header-anchor" href="#三、简单理解-jetcache-是什么"><span>三、简单理解：JetCache 是什么？</span></a></h2><p>JetCache = 注解缓存 + 多级缓存 + 分布式缓存统一管理工具</p><p>它让你不用关心 Redis 或 Caffeine 怎么用，<strong>直接关注缓存业务逻辑</strong>。</p><h2 id="四、jetcache-系统架构" tabindex="-1"><a class="header-anchor" href="#四、jetcache-系统架构"><span>四、JetCache 系统架构</span></a></h2><p><img src="'+l+'" alt="alt text"></p>',21)]))}const i=t(r,[["render",n],["__file","3_jetcache.html.vue"]]),o=JSON.parse('{"path":"/cache/3_jetcache.html","title":"Jetcache","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、JetCache 解决了哪些问题？","slug":"一、jetcache-解决了哪些问题","link":"#一、jetcache-解决了哪些问题","children":[{"level":3,"title":"1. 缓存开发复杂、重复代码多：","slug":"_1-缓存开发复杂、重复代码多","link":"#_1-缓存开发复杂、重复代码多","children":[]},{"level":3,"title":"2. 本地缓存和分布式缓存分离：","slug":"_2-本地缓存和分布式缓存分离","link":"#_2-本地缓存和分布式缓存分离","children":[]},{"level":3,"title":"3. 缓存一致性与失效控制困难：","slug":"_3-缓存一致性与失效控制困难","link":"#_3-缓存一致性与失效控制困难","children":[]},{"level":3,"title":"4. 序列化、Key 管理容易出错：","slug":"_4-序列化、key-管理容易出错","link":"#_4-序列化、key-管理容易出错","children":[]}]},{"level":2,"title":"二、JetCache 的主要能力","slug":"二、jetcache-的主要能力","link":"#二、jetcache-的主要能力","children":[]},{"level":2,"title":"三、简单理解：JetCache 是什么？","slug":"三、简单理解-jetcache-是什么","link":"#三、简单理解-jetcache-是什么","children":[]},{"level":2,"title":"四、JetCache 系统架构","slug":"四、jetcache-系统架构","link":"#四、jetcache-系统架构","children":[]}],"git":{"updatedTime":1752477625000,"contributors":[{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":1,"url":"https://github.com/Clarence"},{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":1,"url":"https://github.com/hello0709"}]},"filePathRelative":"cache/3_jetcache.md"}');export{i as comp,o as data};
