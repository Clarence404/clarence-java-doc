import{_ as n,c as s,a as t,o as e}from"./app-LqpmEyIr.js";const l={};function c(p,a){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="专项-时间和日期" tabindex="-1"><a class="header-anchor" href="#专项-时间和日期"><span>专项-时间和日期</span></a></h1><p>在现代 Java 开发中，推荐使用 <strong><code>java.time</code></strong> 包下的时间日期类，这个包是在 <strong>Java 8</strong> 中引入的，作为对旧时间类（如 <code>java.util.Date</code>, <code>java.util.Calendar</code>）的替代，具有以下优势：</p><hr><h2 id="一、推荐使用的时间类-来自-java-time-包" tabindex="-1"><a class="header-anchor" href="#一、推荐使用的时间类-来自-java-time-包"><span>一、推荐使用的时间类（来自 <code>java.time</code> 包）</span></a></h2><table><thead><tr><th>类名</th><th>说明</th></tr></thead><tbody><tr><td><code>LocalDate</code></td><td>表示没有时间的日期（如 2025-05-27）</td></tr><tr><td><code>LocalTime</code></td><td>表示没有日期的时间（如 14:30:15）</td></tr><tr><td><code>LocalDateTime</code></td><td>表示日期和时间，不包含时区（如 2025-05-27T14:30:15）</td></tr><tr><td><code>ZonedDateTime</code></td><td>包含时区信息的完整时间（如 2025-05-27T14:30:15+08:00[Asia/Shanghai]）</td></tr><tr><td><code>Instant</code></td><td>表示时间戳（1970 年以来的秒或毫秒）</td></tr><tr><td><code>Duration</code></td><td>表示两个时间之间的时长</td></tr><tr><td><code>Period</code></td><td>表示两个日期之间的间隔（年/月/日）</td></tr><tr><td><code>DateTimeFormatter</code></td><td>日期时间格式化工具类</td></tr></tbody></table><hr><h2 id="二、-与旧类的区别" tabindex="-1"><a class="header-anchor" href="#二、-与旧类的区别"><span>二、 与旧类的区别</span></a></h2><table><thead><tr><th>特性</th><th><code>java.util.Date/Calendar</code></th><th><code>java.time.*</code></th></tr></thead><tbody><tr><td>是否线程安全</td><td>❌ 非线程安全</td><td>✅ 线程安全</td></tr><tr><td>API 设计</td><td>混乱，不直观</td><td>清晰、不可变对象</td></tr><tr><td>是否推荐使用</td><td>❌ 不推荐</td><td>✅ 推荐</td></tr></tbody></table><hr><h2 id="三、常见用法示例" tabindex="-1"><a class="header-anchor" href="#三、常见用法示例"><span>三、常见用法示例</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 获取当前日期时间</span></span>
<span class="line"><span class="token class-name">LocalDateTime</span> now <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 获取当前日期</span></span>
<span class="line"><span class="token class-name">LocalDate</span> date <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 格式化</span></span>
<span class="line"><span class="token class-name">String</span> formatted <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 字符串解析</span></span>
<span class="line"><span class="token class-name">LocalDateTime</span> parsed <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2025-05-27T14:30:15&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 加减时间</span></span>
<span class="line"><span class="token class-name">LocalDateTime</span> tomorrow <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">plusDays</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="四、不推荐使用的旧类" tabindex="-1"><a class="header-anchor" href="#四、不推荐使用的旧类"><span>四、不推荐使用的旧类</span></a></h2><ul><li><code>java.util.Date</code></li><li><code>java.util.Calendar</code></li><li><code>java.sql.Date</code></li><li><code>SimpleDateFormat</code>（线程不安全）</li></ul><p>除非在和老代码或数据库交互时，不建议再使用这些类。</p><hr><h2 id="五、-offsetdatetime-是什么" tabindex="-1"><a class="header-anchor" href="#五、-offsetdatetime-是什么"><span>五、 <code>OffsetDateTime</code> 是什么？</span></a></h2><h3 id="_1、offsetdatetime定义" tabindex="-1"><a class="header-anchor" href="#_1、offsetdatetime定义"><span>1、<strong>OffsetDateTime定义</strong>：</span></a></h3><p><code>OffsetDateTime</code> 表示一个带有“UTC 偏移量”的日期和时间。例如：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2025-05-27T14:30:15+08:00</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>它包含：</p><ul><li>日期（<code>LocalDate</code>）</li><li>时间（<code>LocalTime</code>）</li><li><strong>偏移量（Offset，例如 +08:00）</strong></li></ul><p>⚠️ 但它<strong>不包含时区（如 Asia/Shanghai）</strong>，这点不同于 <code>ZonedDateTime</code>。</p><hr><h3 id="_2、常见用途" tabindex="-1"><a class="header-anchor" href="#_2、常见用途"><span>2、常见用途</span></a></h3><ul><li><strong>接口或数据库中只关心 UTC 偏移、不需要时区信息时</strong></li><li><strong>需要精确记录时间戳但不引入复杂的时区概念</strong></li><li><strong>替代传统的 <code>java.util.Date</code> / <code>java.sql.Timestamp</code>，但希望语义更明确</strong></li></ul><hr><h2 id="_3、与其他时间类对比" tabindex="-1"><a class="header-anchor" href="#_3、与其他时间类对比"><span>3、与其他时间类对比</span></a></h2><table><thead><tr><th>类名</th><th>是否包含时区名</th><th>是否包含偏移量</th><th>示例</th></tr></thead><tbody><tr><td><code>LocalDateTime</code></td><td>❌</td><td>❌</td><td>2025-05-27T14:30:15</td></tr><tr><td><code>OffsetDateTime</code></td><td>❌</td><td>✅</td><td>2025-05-27T14:30:15+08:00</td></tr><tr><td><code>ZonedDateTime</code></td><td>✅</td><td>✅</td><td>2025-05-27T14:30:15+08:00[Asia/Shanghai]</td></tr><tr><td><code>Instant</code></td><td>❌</td><td>❌（总是 UTC）</td><td>2025-05-27T06:30:15Z</td></tr></tbody></table><hr><h2 id="_4、示例代码" tabindex="-1"><a class="header-anchor" href="#_4、示例代码"><span>4、示例代码</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 获取当前 OffsetDateTime（默认使用系统默认 Zone）</span></span>
<span class="line"><span class="token class-name">OffsetDateTime</span> offsetNow <span class="token operator">=</span> <span class="token class-name">OffsetDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 指定偏移量创建</span></span>
<span class="line"><span class="token class-name">OffsetDateTime</span> custom <span class="token operator">=</span> <span class="token class-name">OffsetDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token number">2025</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">ZoneOffset</span><span class="token punctuation">.</span><span class="token function">ofHours</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 转换为 Instant（时间戳）</span></span>
<span class="line"><span class="token class-name">Instant</span> instant <span class="token operator">=</span> offsetNow<span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 格式化</span></span>
<span class="line"><span class="token class-name">String</span> formatted <span class="token operator">=</span> offsetNow<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token constant">ISO_OFFSET_DATE_TIME</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5、适用建议" tabindex="-1"><a class="header-anchor" href="#_5、适用建议"><span>5、适用建议</span></a></h2><ul><li>如果你需要处理 <strong>时间戳（含偏移）但不想处理时区数据库</strong>，<code>OffsetDateTime</code> 是非常干净利落的选择。</li><li>如果你需要考虑时区历史变更（如夏令时），用 <code>ZonedDateTime</code>。</li><li>如果你只处理本地时间逻辑，不涉及偏移或时区，用 <code>LocalDateTime</code>。</li></ul>`,35)]))}const i=n(l,[["render",c],["__file","3_topic_time.html.vue"]]),d=JSON.parse('{"path":"/java/3_topic_time.html","title":"专项-时间和日期","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、推荐使用的时间类（来自 java.time 包）","slug":"一、推荐使用的时间类-来自-java-time-包","link":"#一、推荐使用的时间类-来自-java-time-包","children":[]},{"level":2,"title":"二、 与旧类的区别","slug":"二、-与旧类的区别","link":"#二、-与旧类的区别","children":[]},{"level":2,"title":"三、常见用法示例","slug":"三、常见用法示例","link":"#三、常见用法示例","children":[]},{"level":2,"title":"四、不推荐使用的旧类","slug":"四、不推荐使用的旧类","link":"#四、不推荐使用的旧类","children":[]},{"level":2,"title":"五、 OffsetDateTime 是什么？","slug":"五、-offsetdatetime-是什么","link":"#五、-offsetdatetime-是什么","children":[{"level":3,"title":"1、OffsetDateTime定义：","slug":"_1、offsetdatetime定义","link":"#_1、offsetdatetime定义","children":[]},{"level":3,"title":"2、常见用途","slug":"_2、常见用途","link":"#_2、常见用途","children":[]}]},{"level":2,"title":"3、与其他时间类对比","slug":"_3、与其他时间类对比","link":"#_3、与其他时间类对比","children":[]},{"level":2,"title":"4、示例代码","slug":"_4、示例代码","link":"#_4、示例代码","children":[]},{"level":2,"title":"5、适用建议","slug":"_5、适用建议","link":"#_5、适用建议","children":[]}],"git":{"updatedTime":1748359387000,"contributors":[{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":1,"url":"https://github.com/Clarence"}]},"filePathRelative":"java/3_topic_time.md"}');export{i as comp,d as data};
