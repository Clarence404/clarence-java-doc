import{_ as t,c as e,a as r,o as n}from"./app-EPw-2r-W.js";const l={};function s(i,o){return n(),e("div",null,o[0]||(o[0]=[r('<h1 id="传输层和网络层协议-通信协议" tabindex="-1"><a class="header-anchor" href="#传输层和网络层协议-通信协议"><span>传输层和网络层协议（通信协议）</span></a></h1><p>这些协议主要用于计算机网络中的数据传输，保证数据能够可靠地在不同设备之间传递。</p><ul><li><strong>TCP（Transmission Control Protocol，传输控制协议）</strong>：面向连接的可靠传输协议，提供数据流控制和错误检测，常用于 HTTP、FTP 等应用。</li><li><strong>UDP（User Datagram Protocol，用户数据报协议）</strong>：无连接的传输协议，适用于对时延敏感但无需可靠传输的应用，如视频流、DNS 查询等。</li><li><strong>IP（Internet Protocol，互联网协议）</strong>：定义了计算机网络之间的寻址和路由规则，IPv4 和 IPv6 是常见版本。</li><li><strong>ICMP（Internet Control Message Protocol，互联网控制消息协议）</strong>：用于网络设备发送错误报告和测试，如 <code>ping</code> 命令使用 ICMP 发送回显请求。</li><li><strong>HTTP（HyperText Transfer Protocol，超文本传输协议）</strong>：基于 TCP，用于 Web 浏览器与服务器之间的数据传输。</li><li><strong>HTTPS（HTTP Secure，安全超文本传输协议）</strong>：在 HTTP 基础上加密（TLS/SSL）传输，保证数据安全性。</li><li><strong>WebSocket</strong>：基于 TCP 的全双工通信协议，适用于实时通信（如在线聊天、股票推送）。</li></ul>',3)]))}const c=t(l,[["render",s],["__file","1_network_communication.html.vue"]]),m=JSON.parse('{"path":"/protocols/1_network_communication.html","title":"传输层和网络层协议（通信协议）","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1745756619000,"contributors":[{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":1,"url":"https://github.com/hello0709"}]},"filePathRelative":"protocols/1_network_communication.md"}');export{c as comp,m as data};
