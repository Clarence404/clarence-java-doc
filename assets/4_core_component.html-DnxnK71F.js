import{_ as e,c as l,a as i,o as n}from"./app-Du6cbhZk.js";const s={};function r(a,t){return n(),l("div",null,t[0]||(t[0]=[i('<h1 id="核心组件" tabindex="-1"><a class="header-anchor" href="#核心组件"><span>核心组件</span></a></h1><p>主要基于 <a href="https://sca.aliyun.com/" target="_blank" rel="noopener noreferrer">Spring Cloud Alibaba</a> + 国际流行方案扩展。</p><hr><h2 id="_1、服务网关与路由-api-gateway" tabindex="-1"><a class="header-anchor" href="#_1、服务网关与路由-api-gateway"><span>1、服务网关与路由（API Gateway）</span></a></h2><ul><li><strong>Spring Cloud Gateway</strong>（Spring 官方，异步非阻塞）</li><li><strong>Kong</strong>（国外非常流行，基于 Nginx）</li><li><strong>Traefik</strong>（云原生友好，Kubernetes 集成好）</li><li><strong>APISIX</strong>（国产开源，Apache 顶级项目）</li></ul><p>说明：如果是 IoT、高并发，建议用 Spring Cloud Gateway 或 Traefik。</p><hr><h2 id="_2、服务注册与配置管理-service-discovery-config" tabindex="-1"><a class="header-anchor" href="#_2、服务注册与配置管理-service-discovery-config"><span>2、服务注册与配置管理（Service Discovery &amp; Config）</span></a></h2><ul><li><strong>Nacos</strong>（注册中心 + 配置中心）</li><li><strong>Apollo</strong>（配置中心，特别适合复杂配置）</li><li><strong>Consul</strong>（HashiCorp 出品，服务发现与 KV 配置）</li><li><strong>etcd</strong>（CoreOS 出品，Kubernetes 核心组件之一）</li></ul><p>说明：大规模云原生集群，etcd/Consul 比较常见。</p><hr><h2 id="_3、服务通信与调用-rpc-service-mesh" tabindex="-1"><a class="header-anchor" href="#_3、服务通信与调用-rpc-service-mesh"><span>3、服务通信与调用（RPC / Service Mesh）</span></a></h2><ul><li><strong>Dubbo</strong>（阿里出品，RPC 框架）</li><li><strong>OpenSergo</strong>（下一代服务治理标准）</li><li><strong>gRPC</strong>（Google 出品，Protocol Buffers 通信）</li><li><strong>Istio</strong>（服务网格 Service Mesh，基于 Envoy）</li><li><strong>OpenFeign</strong>（Spring Cloud 提供的声明式 HTTP 客户端，简化服务间调用）</li></ul><p>说明：如果追求更标准的跨语言通信，gRPC + Istio 是国际主流组合。</p><hr><h2 id="_4、流量控制与熔断限流-resilience" tabindex="-1"><a class="header-anchor" href="#_4、流量控制与熔断限流-resilience"><span>4、流量控制与熔断限流（Resilience）</span></a></h2><ul><li><strong>Sentinel</strong>（流量控制、熔断、降级）</li><li><strong>Resilience4j</strong>（Spring 官方推荐的熔断器）</li><li><strong>Envoy</strong>（代理级流控能力）</li></ul><p>说明：国内项目 Sentinel 多，国际项目 Resilience4j 也很火。</p><hr><h2 id="_5、分布式事务-distributed-transaction" tabindex="-1"><a class="header-anchor" href="#_5、分布式事务-distributed-transaction"><span>5、分布式事务（Distributed Transaction）</span></a></h2><ul><li><strong>Seata</strong>（阿里出品）</li><li><strong>Saga Pattern（架构模式）</strong>（微服务补偿式事务）</li><li><strong>Event Sourcing</strong>（事件驱动事务，偏云原生）</li></ul><p>说明：Seata 是最实用的工具；大型复杂项目可能采用 Saga+事件溯源。</p><hr><h2 id="_6、消息中间件-messaging-event-bus" tabindex="-1"><a class="header-anchor" href="#_6、消息中间件-messaging-event-bus"><span>6、消息中间件（Messaging / Event Bus）</span></a></h2><ul><li><strong>RocketMQ</strong>（阿里出品）</li><li><strong>Kafka</strong>（全球最流行的流处理平台）</li><li><strong>RabbitMQ</strong>（轻量消息中间件）</li><li><strong>Pulsar</strong>（Apache Pulsar，消息+流统一）</li></ul><p>说明：数据量爆炸式增长（IoT、金融），Kafka 更适合；RocketMQ 适合中小型系统。</p><hr><h2 id="_7、链路追踪与监控-observability" tabindex="-1"><a class="header-anchor" href="#_7、链路追踪与监控-observability"><span>7、链路追踪与监控（Observability）</span></a></h2><ul><li><strong>SkyWalking</strong>（国产顶流，APM+Trace）</li><li><strong>Zipkin</strong>（轻量级链路追踪）</li><li><strong>Jaeger</strong>（Uber 出品，CNCF 项目）</li><li><strong>Prometheus</strong>（指标监控，K8s 标配）</li><li><strong>Grafana</strong>（可视化展示平台）</li></ul><p>说明：现在主流是 Prometheus + Grafana + SkyWalking/Jaeger 配合使用。</p><hr><h2 id="_8、超简总结表" tabindex="-1"><a class="header-anchor" href="#_8、超简总结表"><span>8、超简总结表</span></a></h2><table><thead><tr><th style="text-align:left;">模块</th><th style="text-align:left;">国内主流</th><th style="text-align:left;">国际主流</th></tr></thead><tbody><tr><td style="text-align:left;">网关</td><td style="text-align:left;">Spring Cloud Gateway、APISIX</td><td style="text-align:left;">Kong、Traefik</td></tr><tr><td style="text-align:left;">注册发现</td><td style="text-align:left;">Nacos</td><td style="text-align:left;">Consul、etcd</td></tr><tr><td style="text-align:left;">通信</td><td style="text-align:left;">Dubbo、OpenSergo、OpenFeign</td><td style="text-align:left;">gRPC、Istio</td></tr><tr><td style="text-align:left;">流控</td><td style="text-align:left;">Sentinel</td><td style="text-align:left;">Resilience4j、Envoy</td></tr><tr><td style="text-align:left;">事务</td><td style="text-align:left;">Seata</td><td style="text-align:left;">Saga/Event Sourcing</td></tr><tr><td style="text-align:left;">消息</td><td style="text-align:left;">RocketMQ</td><td style="text-align:left;">Kafka、RabbitMQ、Pulsar</td></tr><tr><td style="text-align:left;">监控</td><td style="text-align:left;">SkyWalking、Zipkin</td><td style="text-align:left;">Jaeger、Prometheus、Grafana</td></tr></tbody></table><hr><div class="hint-container tip"><p class="hint-container-title">小提示</p><ul><li>国内偏向「<strong>一站式集成</strong>」（比如 Spring Cloud Alibaba）</li><li>国外偏向「<strong>组合搭积木式</strong>」（比如 gRPC + Consul + Envoy + Jaeger）</li><li>如果你做的是 IoT 项目，需要重点关注： <ul><li>高并发流量控制（Sentinel / Envoy）</li><li>实时消息处理（Kafka / RocketMQ）</li><li>高可用注册中心（Nacos / Consul）</li><li>全链路监控（SkyWalking / Prometheus）</li></ul></li></ul></div>',35)]))}const g=e(s,[["render",r],["__file","4_core_component.html.vue"]]),c=JSON.parse('{"path":"/microservices/4_core_component.html","title":"核心组件","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1、服务网关与路由（API Gateway）","slug":"_1、服务网关与路由-api-gateway","link":"#_1、服务网关与路由-api-gateway","children":[]},{"level":2,"title":"2、服务注册与配置管理（Service Discovery & Config）","slug":"_2、服务注册与配置管理-service-discovery-config","link":"#_2、服务注册与配置管理-service-discovery-config","children":[]},{"level":2,"title":"3、服务通信与调用（RPC / Service Mesh）","slug":"_3、服务通信与调用-rpc-service-mesh","link":"#_3、服务通信与调用-rpc-service-mesh","children":[]},{"level":2,"title":"4、流量控制与熔断限流（Resilience）","slug":"_4、流量控制与熔断限流-resilience","link":"#_4、流量控制与熔断限流-resilience","children":[]},{"level":2,"title":"5、分布式事务（Distributed Transaction）","slug":"_5、分布式事务-distributed-transaction","link":"#_5、分布式事务-distributed-transaction","children":[]},{"level":2,"title":"6、消息中间件（Messaging / Event Bus）","slug":"_6、消息中间件-messaging-event-bus","link":"#_6、消息中间件-messaging-event-bus","children":[]},{"level":2,"title":"7、链路追踪与监控（Observability）","slug":"_7、链路追踪与监控-observability","link":"#_7、链路追踪与监控-observability","children":[]},{"level":2,"title":"8、超简总结表","slug":"_8、超简总结表","link":"#_8、超简总结表","children":[]}],"git":{"updatedTime":1747058691000,"contributors":[{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":6,"url":"https://github.com/Clarence"},{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":1,"url":"https://github.com/hello0709"}]},"filePathRelative":"microservices/4_core_component.md"}');export{g as comp,c as data};
