import{_ as n,c as a,a as e,o as t}from"./app-E7_j6Dey.js";const p={};function l(c,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="三、策略模式" tabindex="-1"><a class="header-anchor" href="#三、策略模式"><span>三、策略模式</span></a></h1><p><strong>作用</strong>：定义一组算法，让它们可以相互替换，提高代码灵活性。</p><p><strong>应用场景</strong>：</p><ul><li>Spring Security 认证策略</li><li>支付方式选择（支付宝/微信支付）</li><li>日志格式化策略（JSON/XML）</li></ul><p>下面是两个结合 <strong>策略模式</strong> 与 <strong>枚举</strong>（一个配合工厂，一个不配合工厂）的典型示例</p><h2 id="一、枚举-策略模式" tabindex="-1"><a class="header-anchor" href="#一、枚举-策略模式"><span>一、枚举 + 策略模式</span></a></h2><p><strong>场景</strong>：日志格式化策略（JSON / XML / TEXT）</p><h3 id="_1-定义策略接口" tabindex="-1"><a class="header-anchor" href="#_1-定义策略接口"><span>1. 定义策略接口：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">LogFormatter</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">String</span> level<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-实现具体策略类" tabindex="-1"><a class="header-anchor" href="#_2-实现具体策略类"><span>2. 实现具体策略类：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonLogFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">LogFormatter</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">String</span> level<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;level\\&quot;:\\&quot;%s\\&quot;,\\&quot;message\\&quot;:\\&quot;%s\\&quot;}&quot;</span><span class="token punctuation">,</span> level<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XmlLogFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">LogFormatter</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">String</span> level<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;log&gt;&lt;level&gt;%s&lt;/level&gt;&lt;message&gt;%s&lt;/message&gt;&lt;/log&gt;&quot;</span><span class="token punctuation">,</span> level<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TextLogFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">LogFormatter</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">String</span> level<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> level <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> message<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-枚举中持有策略实现" tabindex="-1"><a class="header-anchor" href="#_3-枚举中持有策略实现"><span>3. 枚举中持有策略实现：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">LogFormatStrategy</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">JSON</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JsonLogFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">XML</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XmlLogFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TextLogFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">LogFormatter</span> formatter<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">LogFormatStrategy</span><span class="token punctuation">(</span><span class="token class-name">LogFormatter</span> formatter<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>formatter <span class="token operator">=</span> formatter<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">String</span> level<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> formatter<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>level<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-使用示例" tabindex="-1"><a class="header-anchor" href="#_4-使用示例"><span>4. 使用示例：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token class-name">LogFormatStrategy</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;INFO&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;系统启动成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出 JSON 格式的日志</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、枚举-工厂模式-策略模式" tabindex="-1"><a class="header-anchor" href="#二、枚举-工厂模式-策略模式"><span>二、枚举 + 工厂模式 + 策略模式</span></a></h2><p><strong>场景</strong>：支付策略（微信 / 支付宝）</p><h3 id="_1-定义支付策略接口" tabindex="-1"><a class="header-anchor" href="#_1-定义支付策略接口"><span>1. 定义支付策略接口：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">PayStrategy</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">pay</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-实现策略类" tabindex="-1"><a class="header-anchor" href="#_2-实现策略类"><span>2. 实现策略类：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WechatPay</span> <span class="token keyword">implements</span> <span class="token class-name">PayStrategy</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">pay</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;使用微信支付：&quot;</span> <span class="token operator">+</span> orderId <span class="token operator">+</span> <span class="token string">&quot;, 金额：&quot;</span> <span class="token operator">+</span> amount<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AliPay</span> <span class="token keyword">implements</span> <span class="token class-name">PayStrategy</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">pay</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;使用支付宝支付：&quot;</span> <span class="token operator">+</span> orderId <span class="token operator">+</span> <span class="token string">&quot;, 金额：&quot;</span> <span class="token operator">+</span> amount<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-支付类型枚举" tabindex="-1"><a class="header-anchor" href="#_3-支付类型枚举"><span>3. 支付类型枚举：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">PayType</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token constant">WECHAT</span><span class="token punctuation">,</span> <span class="token constant">ALIPAY</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-策略工厂-注册表" tabindex="-1"><a class="header-anchor" href="#_4-策略工厂-注册表"><span>4. 策略工厂（注册表）：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PayStrategyFactory</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PayType</span><span class="token punctuation">,</span> <span class="token class-name">PayStrategy</span><span class="token punctuation">&gt;</span></span> <span class="token constant">STRATEGY_MAP</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">static</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token constant">STRATEGY_MAP</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">PayType</span><span class="token punctuation">.</span><span class="token constant">WECHAT</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">WechatPay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token constant">STRATEGY_MAP</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">PayType</span><span class="token punctuation">.</span><span class="token constant">ALIPAY</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AliPay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">PayStrategy</span> <span class="token function">getStrategy</span><span class="token punctuation">(</span><span class="token class-name">PayType</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token constant">STRATEGY_MAP</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-使用方式" tabindex="-1"><a class="header-anchor" href="#_5-使用方式"><span>5. 使用方式：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">PayStrategy</span> strategy <span class="token operator">=</span> <span class="token class-name">PayStrategyFactory</span><span class="token punctuation">.</span><span class="token function">getStrategy</span><span class="token punctuation">(</span><span class="token class-name">PayType</span><span class="token punctuation">.</span><span class="token constant">WECHAT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> result <span class="token operator">=</span> strategy<span class="token punctuation">.</span><span class="token function">pay</span><span class="token punctuation">(</span><span class="token string">&quot;ORDER123&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;99.99&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、总结对比" tabindex="-1"><a class="header-anchor" href="#三、总结对比"><span>三、总结对比</span></a></h2><table><thead><tr><th>示例</th><th>枚举持有策略</th><th>工厂注册策略</th><th>优点</th></tr></thead><tbody><tr><td>示例一</td><td>✅</td><td>❌</td><td>简单直接，适合枚举固定策略</td></tr><tr><td>示例二</td><td>❌</td><td>✅</td><td>支持运行时动态注册、扩展更灵活</td></tr></tbody></table>`,29)]))}const i=n(p,[["render",l],["__file","3_strategy.html.vue"]]),u=JSON.parse('{"path":"/patterns/3_strategy.html","title":"三、策略模式","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、枚举 + 策略模式","slug":"一、枚举-策略模式","link":"#一、枚举-策略模式","children":[{"level":3,"title":"1. 定义策略接口：","slug":"_1-定义策略接口","link":"#_1-定义策略接口","children":[]},{"level":3,"title":"2. 实现具体策略类：","slug":"_2-实现具体策略类","link":"#_2-实现具体策略类","children":[]},{"level":3,"title":"3. 枚举中持有策略实现：","slug":"_3-枚举中持有策略实现","link":"#_3-枚举中持有策略实现","children":[]},{"level":3,"title":"4. 使用示例：","slug":"_4-使用示例","link":"#_4-使用示例","children":[]}]},{"level":2,"title":"二、枚举 + 工厂模式 + 策略模式","slug":"二、枚举-工厂模式-策略模式","link":"#二、枚举-工厂模式-策略模式","children":[{"level":3,"title":"1. 定义支付策略接口：","slug":"_1-定义支付策略接口","link":"#_1-定义支付策略接口","children":[]},{"level":3,"title":"2. 实现策略类：","slug":"_2-实现策略类","link":"#_2-实现策略类","children":[]},{"level":3,"title":"3. 支付类型枚举：","slug":"_3-支付类型枚举","link":"#_3-支付类型枚举","children":[]},{"level":3,"title":"4. 策略工厂（注册表）：","slug":"_4-策略工厂-注册表","link":"#_4-策略工厂-注册表","children":[]},{"level":3,"title":"5. 使用方式：","slug":"_5-使用方式","link":"#_5-使用方式","children":[]}]},{"level":2,"title":"三、总结对比","slug":"三、总结对比","link":"#三、总结对比","children":[]}],"git":{"updatedTime":1753450905000,"contributors":[{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":2,"url":"https://github.com/hello0709"},{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":1,"url":"https://github.com/Clarence"}]},"filePathRelative":"patterns/3_strategy.md"}');export{i as comp,u as data};
