import{_ as d,c as e,a as s,o as n}from"./app-0Exyoz7n.js";const r={};function o(a,t){return n(),e("div",null,t[0]||(t[0]=[s(`<h1 id="postgres" tabindex="-1"><a class="header-anchor" href="#postgres"><span>Postgres</span></a></h1><ul><li><strong>官网</strong>：<a href="https://www.postgresql.org/" target="_blank" rel="noopener noreferrer">PostgreSQL 官网</a></li></ul><h2 id="一、基础介绍" tabindex="-1"><a class="header-anchor" href="#一、基础介绍"><span>一、基础介绍</span></a></h2><ul><li><strong>背景</strong>：PostgreSQL 是一个开源的关系型数据库管理系统（RDBMS），最初由加利福尼亚大学伯克利分校的研究团队在 1986 年开始开发，最初的名字叫做 Postgres。</li><li><strong>来源</strong>：PostgreSQL 并非中国的数据库，而是源自美国的开源项目。</li><li><strong>特点</strong>： <ul><li>全球范围内广泛使用的开源数据库，具有高可扩展性和强大的事务支持。</li><li>支持 SQL 标准，具备丰富的功能，如 JSON 数据类型、地理信息系统（GIS）功能（PostGIS）等。</li><li>在全球范围内有广泛的社区支持和开发者贡献。</li></ul></li></ul><h2 id="二、安装使用" tabindex="-1"><a class="header-anchor" href="#二、安装使用"><span>二、安装使用</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">services:</span>
<span class="line">  postgres:</span>
<span class="line">    image: postgres:17.4-bookworm</span>
<span class="line">    container_name: postgres</span>
<span class="line">    restart: always</span>
<span class="line">    environment:</span>
<span class="line">      POSTGRES_USER: root</span>
<span class="line">      POSTGRES_PASSWORD: <span class="token number">123456</span></span>
<span class="line">    ports:</span>
<span class="line">      - <span class="token string">&quot;5432:5432&quot;</span></span>
<span class="line">    volumes:</span>
<span class="line">      - ./postgres_data:/var/lib/postgresql/data</span>
<span class="line"></span>
<span class="line">volumes:</span>
<span class="line">  postgres_data:</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、核心概念" tabindex="-1"><a class="header-anchor" href="#三、核心概念"><span>三、核心概念</span></a></h2><h3 id="_1、逻辑结构" tabindex="-1"><a class="header-anchor" href="#_1、逻辑结构"><span>1、逻辑结构</span></a></h3><p>PostgreSQL 采用 数据库 - 模式（Schema） - 表 的层级结构：</p><ul><li><p>数据库（Database）：存储所有数据，每个 PostgreSQL 实例可包含多个数据库。</p></li><li><p>模式（Schema）：用于组织数据库对象（表、视图等），类似于命名空间。</p></li><li><p>表（Table）：数据的核心存储单元，由行和列组成。</p></li><li><p>列（Column）：定义字段，具有不同的数据类型。</p></li><li><p>行（Row）：存储具体的数据记录。</p></li></ul><h3 id="_2、常见数据类型" tabindex="-1"><a class="header-anchor" href="#_2、常见数据类型"><span>2、常见数据类型</span></a></h3><p>官网数据结构地址：<a href="https://www.postgresql.org/docs/current/datatype.html" target="_blank" rel="noopener noreferrer">https://www.postgresql.org/docs/current/datatype.html</a></p><p>以下是 <strong>PostgreSQL 数据类型</strong> 和 <strong>Java 数据类型</strong> 之间的对应关系表：</p><table><thead><tr><th>PostgreSQL 数据类型</th><th>Java 数据类型</th><th>说明</th></tr></thead><tbody><tr><td><strong>整数类型</strong></td><td></td><td></td></tr><tr><td><code>SMALLINT</code> (2字节)</td><td><code>Short</code></td><td>适用于 -32,768 到 32,767 之间的整数</td></tr><tr><td><code>INTEGER</code> / <code>INT</code> (4字节)</td><td><code>Integer</code></td><td>适用于 -2^31 到 2^31-1 之间的整数</td></tr><tr><td><code>BIGINT</code> (8字节)</td><td><code>Long</code></td><td>适用于更大范围的整数</td></tr><tr><td><code>SERIAL</code> (自增 INT)</td><td><code>Integer</code></td><td>自增主键，自动生成数值</td></tr><tr><td><code>BIGSERIAL</code> (自增 BIGINT)</td><td><code>Long</code></td><td>适用于大整数的自增主键</td></tr><tr><td><strong>浮点数与精度数</strong></td><td></td><td></td></tr><tr><td><code>DECIMAL(p,s)</code> / <code>NUMERIC(p,s)</code></td><td><code>BigDecimal</code></td><td>高精度小数，适用于金融计算</td></tr><tr><td><code>REAL</code> (4字节)</td><td><code>Float</code></td><td>单精度浮点数</td></tr><tr><td><code>DOUBLE PRECISION</code> (8字节)</td><td><code>Double</code></td><td>双精度浮点数</td></tr><tr><td><strong>字符串类型</strong></td><td></td><td></td></tr><tr><td><code>CHAR(n)</code> / <code>CHARACTER(n)</code></td><td><code>String</code></td><td>固定长度字符串</td></tr><tr><td><code>VARCHAR(n)</code> / <code>CHARACTER VARYING(n)</code></td><td><code>String</code></td><td>可变长度字符串</td></tr><tr><td><code>TEXT</code></td><td><code>String</code></td><td>任意长度的字符串</td></tr><tr><td><strong>日期和时间类型</strong></td><td></td><td></td></tr><tr><td><code>DATE</code></td><td><code>LocalDate</code></td><td>仅存储日期 (yyyy-MM-dd)</td></tr><tr><td><code>TIME</code></td><td><code>LocalTime</code></td><td>仅存储时间 (HH:mm:ss)</td></tr><tr><td><code>TIMESTAMP</code></td><td><code>LocalDateTime</code></td><td>日期 + 时间，不带时区</td></tr><tr><td><code>TIMESTAMP WITH TIME ZONE</code></td><td><code>OffsetDateTime</code></td><td>带时区的日期时间</td></tr><tr><td><code>INTERVAL</code></td><td><code>Duration</code></td><td>表示时间间隔</td></tr><tr><td><strong>布尔类型</strong></td><td></td><td></td></tr><tr><td><code>BOOLEAN</code></td><td><code>Boolean</code></td><td><code>true</code> 或 <code>false</code></td></tr><tr><td><strong>二进制类型</strong></td><td></td><td></td></tr><tr><td><code>BYTEA</code></td><td><code>byte[]</code></td><td>存储二进制数据</td></tr><tr><td><strong>JSON 类型</strong></td><td></td><td></td></tr><tr><td><code>JSON</code> / <code>JSONB</code></td><td><code>String</code> / <code>JSONObject</code></td><td><code>JSONB</code> 存储效率更高</td></tr><tr><td><strong>数组类型</strong></td><td></td><td></td></tr><tr><td><code>INTEGER[]</code></td><td><code>Integer[]</code> / <code>List&lt;Integer&gt;</code></td><td>存储整型数组</td></tr><tr><td><code>TEXT[]</code></td><td><code>String[]</code> / <code>List&lt;String&gt;</code></td><td>存储字符串数组</td></tr><tr><td><strong>UUID 类型</strong></td><td></td><td></td></tr><tr><td><code>UUID</code></td><td><code>UUID</code></td><td>存储全局唯一标识符</td></tr><tr><td><strong>枚举类型</strong></td><td></td><td></td></tr><tr><td><code>ENUM</code></td><td><code>Enum&lt;?&gt;</code></td><td>需要用 <code>@Enumerated(EnumType.STRING)</code> 映射</td></tr><tr><td><strong>hstore（键值存储）</strong></td><td></td><td></td></tr><tr><td><code>hstore</code></td><td><code>Map&lt;String, String&gt;</code></td><td>键值对存储</td></tr></tbody></table><h2 id="四、常用命令" tabindex="-1"><a class="header-anchor" href="#四、常用命令"><span>四、常用命令</span></a></h2><h2 id="五、常见问题" tabindex="-1"><a class="header-anchor" href="#五、常见问题"><span>五、常见问题</span></a></h2><h3 id="_1、postgresql-gis如何支持" tabindex="-1"><a class="header-anchor" href="#_1、postgresql-gis如何支持"><span>1、PostgreSQL Gis如何支持？</span></a></h3><p>17版本可以直接使用如下命令：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> EXTENSION postgis<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,19)]))}const c=d(r,[["render",o],["__file","0_postgres.html.vue"]]),i=JSON.parse('{"path":"/database/0_postgres.html","title":"Postgres","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、基础介绍","slug":"一、基础介绍","link":"#一、基础介绍","children":[]},{"level":2,"title":"二、安装使用","slug":"二、安装使用","link":"#二、安装使用","children":[]},{"level":2,"title":"三、核心概念","slug":"三、核心概念","link":"#三、核心概念","children":[{"level":3,"title":"1、逻辑结构","slug":"_1、逻辑结构","link":"#_1、逻辑结构","children":[]},{"level":3,"title":"2、常见数据类型","slug":"_2、常见数据类型","link":"#_2、常见数据类型","children":[]}]},{"level":2,"title":"四、常用命令","slug":"四、常用命令","link":"#四、常用命令","children":[]},{"level":2,"title":"五、常见问题","slug":"五、常见问题","link":"#五、常见问题","children":[{"level":3,"title":"1、PostgreSQL Gis如何支持？","slug":"_1、postgresql-gis如何支持","link":"#_1、postgresql-gis如何支持","children":[]}]}],"git":{"updatedTime":1748269182000,"contributors":[{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":4,"url":"https://github.com/hello0709"},{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":1,"url":"https://github.com/Clarence"}]},"filePathRelative":"database/0_postgres.md"}');export{c as comp,i as data};
