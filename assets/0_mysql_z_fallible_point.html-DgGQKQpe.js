import{_ as e,c as i,a as t,o as a}from"./app-DzYOpekI.js";const s={};function n(o,l){return a(),i("div",null,l[0]||(l[0]=[t('<h1 id="mysql-雷区标识" tabindex="-1"><a class="header-anchor" href="#mysql-雷区标识"><span>Mysql 雷区标识</span></a></h1><ul><li>https://mp.weixin.qq.com/s/xQGJBn_M9qT2znd-2nmAng</li></ul><p>为什么MySQL雷区如此之多？在深入具体雷区之前，我们先聊聊为什么MySQL这么容易踩坑。</p><p>这背后有几个深层次原因：看似简单：</p><ul><li>MySQL语法简单，入门容易，让很多人低估了它的复杂性</li><li>默认配置坑多：MySQL的默认配置往往不是最优的，需要根据业务场景调整</li><li>渐进式问题：很多问题在数据量小的时候不会暴露，等到暴露时已经为时已晚</li><li>知识更新快：从5.6到5.7再到8.0，每个版本都有重要变化，需要持续学习</li><li>有些小伙伴在工作中，可能直接用默认配置部署MySQL，或者在写SQL时只关注功能实现，忽略了性能问题。</li><li>这就是为什么我们需要系统性地了解这些雷区。</li><li>好了，让我们开始今天的主菜。我将从最常见的索引失效，逐步深入到复杂的死锁问题，确保每个雷区都讲透、讲懂。</li></ul>',5)]))}const m=e(s,[["render",n],["__file","0_mysql_z_fallible_point.html.vue"]]),r=JSON.parse('{"path":"/database/0_mysql_z_fallible_point.html","title":"Mysql 雷区标识","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1761196155000,"contributors":[{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":2,"url":"https://github.com/hello0709"}]},"filePathRelative":"database/0_mysql_z_fallible_point.md"}');export{m as comp,r as data};
