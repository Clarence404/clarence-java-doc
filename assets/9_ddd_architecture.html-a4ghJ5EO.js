import{_ as l,c as d,a as i,o as a}from"./app-CIL8s_yA.js";const t={};function n(r,e){return a(),d("div",null,e[0]||(e[0]=[i('<h1 id="ddd-领域驱动设计" tabindex="-1"><a class="header-anchor" href="#ddd-领域驱动设计"><span>DDD 领域驱动设计</span></a></h1><div class="hint-container warning"><p class="hint-container-title">Todo</p><p>以下只是基础大纲，后续需要持续增加内容</p></div><h2 id="一、什么是-ddd" tabindex="-1"><a class="header-anchor" href="#一、什么是-ddd"><span>一、什么是 DDD？</span></a></h2><ul><li>定义：DDD（领域驱动设计）的基本概念</li><li>背景：为什么会出现 DDD，解决了什么问题</li><li>与传统开发方式的对比（例如：面向过程、三层架构）</li></ul><h2 id="二、ddd-的核心理念" tabindex="-1"><a class="header-anchor" href="#二、ddd-的核心理念"><span>二、DDD 的核心理念</span></a></h2><ul><li>以领域为中心建模</li><li>统一语言（Ubiquitous Language）</li><li>领域专家与开发人员协作建模</li><li>聚焦复杂业务而非技术细节</li></ul><h2 id="三、ddd-的核心构建块-战术设计" tabindex="-1"><a class="header-anchor" href="#三、ddd-的核心构建块-战术设计"><span>三、DDD 的核心构建块（战术设计）</span></a></h2><ul><li>实体（Entity）</li><li>值对象（Value Object）</li><li>聚合与聚合根（Aggregate &amp; Aggregate Root）</li><li>领域服务（Domain Service）</li><li>工厂（Factory）</li><li>仓储（Repository）</li></ul><h2 id="四、ddd-的分层架构-战略设计" tabindex="-1"><a class="header-anchor" href="#四、ddd-的分层架构-战略设计"><span>四、DDD 的分层架构（战略设计）</span></a></h2><ul><li>表现层（Interface Layer）</li><li>应用层（Application Layer）</li><li>领域层（Domain Layer）</li><li>基础设施层（Infrastructure Layer）</li></ul><h2 id="五、限界上下文-bounded-context" tabindex="-1"><a class="header-anchor" href="#五、限界上下文-bounded-context"><span>五、限界上下文（Bounded Context）</span></a></h2><ul><li>什么是限界上下文</li><li>如何划分上下文</li><li>上下文之间的集成方式（REST、事件、共享内核等）</li><li>结合微服务的场景应用</li></ul><h2 id="六、常见实践与工具" tabindex="-1"><a class="header-anchor" href="#六、常见实践与工具"><span>六、常见实践与工具</span></a></h2><ul><li>如何在项目中落地 DDD</li><li>与 Spring Boot、MyBatis、Event Sourcing、CQRS 的结合</li><li>示例代码结构（可选）</li></ul><h2 id="七、ddd-的优势与挑战" tabindex="-1"><a class="header-anchor" href="#七、ddd-的优势与挑战"><span>七、DDD 的优势与挑战</span></a></h2><ul><li>优势：可维护性、业务复杂性管理、团队协作</li><li>挑战：学习成本高、建模难度大、过度设计风险</li></ul>',16)]))}const h=l(t,[["render",n],["__file","9_ddd_architecture.html.vue"]]),s=JSON.parse('{"path":"/architecture/9_ddd_architecture.html","title":"DDD 领域驱动设计","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、什么是 DDD？","slug":"一、什么是-ddd","link":"#一、什么是-ddd","children":[]},{"level":2,"title":"二、DDD 的核心理念","slug":"二、ddd-的核心理念","link":"#二、ddd-的核心理念","children":[]},{"level":2,"title":"三、DDD 的核心构建块（战术设计）","slug":"三、ddd-的核心构建块-战术设计","link":"#三、ddd-的核心构建块-战术设计","children":[]},{"level":2,"title":"四、DDD 的分层架构（战略设计）","slug":"四、ddd-的分层架构-战略设计","link":"#四、ddd-的分层架构-战略设计","children":[]},{"level":2,"title":"五、限界上下文（Bounded Context）","slug":"五、限界上下文-bounded-context","link":"#五、限界上下文-bounded-context","children":[]},{"level":2,"title":"六、常见实践与工具","slug":"六、常见实践与工具","link":"#六、常见实践与工具","children":[]},{"level":2,"title":"七、DDD 的优势与挑战","slug":"七、ddd-的优势与挑战","link":"#七、ddd-的优势与挑战","children":[]}],"git":{"updatedTime":1745319863000,"contributors":[{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":2,"url":"https://github.com/Clarence"},{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":1,"url":"https://github.com/hello0709"}]},"filePathRelative":"architecture/9_ddd_architecture.md"}');export{h as comp,s as data};
